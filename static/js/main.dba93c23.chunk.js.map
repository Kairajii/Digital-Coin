{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Homepage.jsx","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Exchanges.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetExchangesQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Typography","Homepage","data","isFetching","globalStats","stats","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Cryptocurrencies","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","rank","extra","iconUrl","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexof","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","dataPublished","startOf","fromNow","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","marketShare","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.dba93c23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\r\nimport icon from '../images/cryptocurrency.png';\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize <= 800) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to=\"/\">Digital Coin</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n\r\n               \r\n            </div>\r\n            {activeMenu && (\r\n            <Menu theme=\"dark\">\r\n            <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            </Menu.Item>\r\n            <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n            </Menu.Item>\r\n            </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '4ffebac782msh77c0025dea1a8dep1c701ejsn95f5955b8ab4'\r\n}\r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders })\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest(`/exchanges`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`/coin/${coinId}/history/${timeperiod}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const {\r\n    useGetCryptosQuery,\r\n    useGetExchangesQuery,\r\n    useGetCryptoDetailsQuery,\r\n    useGetCryptoHistoryQuery\r\n} = cryptoApi;","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Typography, Row, Col, Statistic } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Cryptocurrencies, News } from '../components';\r\nimport Loader from './Loader';\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\nconst { data, isFetching } = useGetCryptosQuery(10);\r\n\r\nconst globalStats = data?.data?.stats;\r\n\r\nif(isFetching) return <Loader />;\r\n\r\n    return (\r\n        <>\r\n        <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n        <Row>\r\n            <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n            <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n            <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)} /></Col>\r\n            <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)} /></Col>\r\n            <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n        </Row>\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the World</Title>\r\n            <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n        </div>\r\n        <Cryptocurrencies simplified />\r\n        <div className=\"home-heading-container\">\r\n            <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n            <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n        </div>\r\n        <News simplified/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","import React, { useState, useEffect } from 'react';\r\nimport millify from 'millify';\r\nimport { Link  } from 'react-router-dom';\r\nimport { Card, Row, Col, Input } from 'antd';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst Cryptocurrencies = ( { simplified }) => {\r\nconst count = simplified ? 10 : 100;\r\nconst { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\nconst [ cryptos, setCryptos] = useState([]);\r\nconst [searchTerm, setSearchTerm] = useState('');\r\n\r\nuseEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n    setCryptos(filteredData);\r\n},[cryptosList, searchTerm ]);\r\n\r\nconsole.log(cryptos);\r\nif(isFetching) return <Loader />;\r\n\r\n\r\n    return (\r\n    <>\r\n    {!simplified && (\r\n    <div className=\"search-crypto\">\r\n        <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n    </div>\r\n    )}\r\n    <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency)=> (\r\n            <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                <Link to={`/crypto/${currency.id}`}>\r\n                    <Card\r\n                    title={`${currency.rank}. ${currency.name}`}\r\n                    extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"/\"/>}\r\n                    hoverable>\r\n                        <p>Price: {millify(currency.price)}</p>\r\n                        <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                        <p>Daily Change: {millify(currency.change)}%</p>\r\n                    </Card>\r\n                </Link>\r\n            </Col>\r\n        ))}\r\n    </Row>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies\r\n","\r\nimport React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\nimport LineChart from './LineChart';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '4ffebac782msh77c0025dea1a8dep1c701ejsn95f5955b8ab4'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({ baseUrl }),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;","import React, { useState } from 'react';\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\r\nimport moment from 'moment';\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\n\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst demoImage ='https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nconst News = ( { simplified }) => {\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n    const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12});\r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    \r\n    if(!cryptoNews?.value) return 'Loading...';\r\n\r\n    return (\r\n        <Row gutter={[24, 24 ]}>\r\n            {!simplified && (\r\n                <Col span={24}>\r\n                    <Select\r\n                       showSearch\r\n                       className=\"Select-news\"\r\n                       placeholder=\"Select a Crypto\"\r\n                       optionFilterProp=\"children\"\r\n                       onChange={(value) => setNewsCategory(value)}\r\n                       filterOption={(input, option) => option.children.toLowerCase().indexof(input.toLowerCase()) >=0}\r\n                       >\r\n                           <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n                           {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\r\n                       </Select>\r\n                </Col>\r\n            )}\r\n            {cryptoNews.value.map((news, i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-tittle\" level={4}>{news.name}</Title>\r\n                                <img style={{maxWidth:'200px',maxHeight:'100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage } alt=\"news\"></img>\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100\r\n                                ?`${news.description.substring(0, 100)}...`\r\n                            : news.description\r\n                            }\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                    </div> \r\n                                    <Text>{moment(news.dataPublished).startOf('seconds').fromNow()}</Text>\r\n\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react';\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport Loader from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import React from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\nimport { Layout, Typography, Space } from 'antd';\r\nimport { Navbar, Homepage, Exchanges, Cryptocurrencies, CryptoDetails, News } from './components';\r\nimport './App.css';\r\nconst App = () => {\r\n    return ( <\r\n        div className = \"app\" >\r\n        <\r\n        div className = \"navbar\" >\r\n        <\r\n        Navbar / >\r\n        <\r\n        /div> <\r\n        div className = \"main\" >\r\n        <\r\n        Layout >\r\n        <\r\n        div className = \"routes\" >\r\n        <\r\n        Switch >\r\n        <\r\n        Route exact path = \"/\" >\r\n        <\r\n        Homepage / >\r\n        <\r\n        /Route> <\r\n        Route exact path = \"/exchanges\" >\r\n        <\r\n        Exchanges / >\r\n        <\r\n        /Route> <\r\n        Route exact path = \"/cryptocurrencies\" >\r\n        <\r\n        Cryptocurrencies / >\r\n        <\r\n        /Route> <\r\n        Route exact path = \"/crypto/:coinId\" >\r\n        <\r\n        CryptoDetails / >\r\n        <\r\n        /Route> <\r\n        Route exact path = \"/news\" >\r\n        <\r\n        News / >\r\n        <\r\n        /Route> < /\r\n        Switch > <\r\n        /div> < /\r\n        Layout >\r\n        <\r\n        div className = \"footer\" >\r\n        <\r\n        Typography.Title level = { 5 }\r\n        style = {\r\n            { color: 'white', textAlign: 'center' }\r\n        } >\r\n        Digital Coin < br / >\r\n        All rights reserved < br / >\r\n        Created by Tushar Kaira <\r\n        /Typography.Title>  <\r\n        Space > <\r\n        Link to = \"/\" > Home < /Link> <\r\n        Link to = \"/exchanges\" > Exchanges < /Link> <\r\n        Link to = \"/news\" > News < /Link> </Space > <\r\n        /div > < /\r\n        div > < /\r\n        div >\r\n    );\r\n}\r\n\r\nexport default App","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { cryptoApi } from '../services/cryptoApi';\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    },\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport 'antd/dist/antd.css';\r\n\r\nReactDOM.render( < Router >\r\n    <\r\n    Provider store = { store } >\r\n    <\r\n    App / >\r\n    <\r\n    /Provider> < /\r\n    Router > , document.getElementById('root')\r\n);"],"sourceRoot":""}